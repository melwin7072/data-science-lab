import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
import numpy as np
# Load customer data
customer = pd.read_csv('/content/Customer_Data.csv')

# Extract the 'Annual Income' and 'Spending Score' columns for clustering
points = customer.iloc[:, 3:5].values  # Assuming columns 3 and 4 are 'Annual Income' and 'Spending Score'
x = points[:, 0]
y = points[:, 1]
# Plot initial data points
plt.figure(figsize=(8, 6))
plt.scatter(x, y, s=50, alpha=0.7, c='blue')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.title('Customer Data: Annual Income vs Spending Score')
plt.show()
# Function to apply KMeans clustering and plot results
def kmeans_clustering_and_plot(points, n_clusters):
    # Apply KMeans
    kmeans = KMeans(n_clusters=n_clusters, random_state=0)
    kmeans.fit(points)
    cluster_labels = kmeans.predict(points)
    cluster_centers = kmeans.cluster_centers_

    # Plot clustered data
    plt.figure(figsize=(8, 6))
    scatter = plt.scatter(x, y, c=cluster_labels, s=50, alpha=0.7, cmap='viridis')
    plt.scatter(cluster_centers[:, 0], cluster_centers[:, 1], s=200, c='red', marker='X', label='Centroids')
    plt.xlabel('Annual Income (k$)')
    plt.ylabel('Spending Score (1-100)')
    plt.title(f'K-Means Clustering with {n_clusters} Clusters')
    plt.legend()
    plt.colorbar(scatter, label="Cluster Label")
    plt.show()
    # Print cluster labels for each point
    print(f"Cluster labels for K={n_clusters}:\n", cluster_labels)
    print(f"Cluster centers for K={n_clusters}:\n", cluster_centers)
    # Visualize clustering for different values of K
for k in range(4, 9):  # Testing for K=4 to K=8
    kmeans_clustering_and_plot(points, n_clusters=k)

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import confusion_matrix, classification_report
from sklearn import tree
import matplotlib.pyplot as plt
import seaborn as sns  # Import seaborn
# Load the dataset
wine_data = pd.read_csv("/content/winequality-red.csv", sep=';')
print(wine_data.head())
if 'color' in wine_data.columns:
  wine_data = pd.get_dummies(wine_data, columns=['color'], drop_first=True)
X=wine_data.drop('quality',axis=1)
y=wine_data['quality']
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=42)
dt_classifier=DecisionTreeClassifier(random_state=42,max_depth=2)
dt_classifier.fit(X_train,y_train)
y_pred=dt_classifier.predict(X_test)
classification_rep=classification_report(y_test,y_pred,zero_division=1)
print("Classification Report:")
print(classification_rep)
import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(6,4))
sns.heatmap(conf_matrix,annot=True,fmt='d',cmap='Blues',cbar=False)
plt.xlabel('Predicted')
plt.ylabel('True')
plt.title('Confusion Matrix')
plt.show()

plt.figure(figsize=(12,8))
tree.plot_tree(dt_classifier, feature_names=X.columns,class_names=[str(label) for label in dt_classifier.classes_],filled=True, rounded=True)
plt.title('Decision Tree')
plt.show()

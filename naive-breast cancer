import pandas as pd 
df = pd.read_csv('/content/breast-cancer.csv') # Load the Breast Cancer dataset 
print(df.head())   # first few rows 
print(df.isnull().sum())  # Check for missing values 
print(df.describe()) # Summary statistics of the dataset 
# Target variable distribution (if the dataset contains target classes, such as 'diagnosis') 
if 'diagnosis' in df.columns: 
    print(df['diagnosis'].value_counts())

# b) visualization 
import matplotlib.pyplot as plt 
import seaborn as sns 
plt.figure(figsize=(8, 6)) 
sns.scatterplot(x='radius_mean', y='texture_mean', hue='diagnosis', 
data=df) 
plt.title("Scatter plot of Radius Mean vs Texture Mean") 
plt.show() 

plt.figure(figsize=(8, 6)) 
df['radius_mean'].hist(bins=30) 
plt.title("Histogram of Radius Mean") 
plt.xlabel("Radius Mean") 
plt.ylabel("Frequency") 
plt.show() 

plt.figure(figsize=(8, 6)) 
sns.boxplot(x='diagnosis', y='radius_mean', data=df) 
plt.title("Box plot of Radius Mean grouped by Diagnosis") 
plt.show() 

#(c): Implementing Naïve Bayes Classification 
from sklearn.model_selection import train_test_split 
from sklearn.naive_bayes import GaussianNB 
from sklearn.metrics import classification_report, accuracy_score 

df_cleaned = df.dropna()  

X = df_cleaned.drop(['diagnosis'], axis=1)  # Exclude 'diagnosis' for features 
y = df_cleaned['diagnosis']  # 'diagnosis' is the target variable 

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, 
random_state=42) 
nb = GaussianNB()   # Initialize the Naïve Bayes classifier 
nb.fit(X_train, y_train)     # Train the model 
y_pred = nb.predict(X_test)     # Predict on the test set 

print("Classification Report:\n", classification_report(y_test, y_pred)) 
accuracy = accuracy_score(y_test, y_pred) 
print(f"Accuracy: {accuracy:.4f }")
